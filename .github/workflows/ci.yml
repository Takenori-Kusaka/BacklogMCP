name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: コード品質チェック
    runs-on: ubuntu-latest
    
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Pythonのセットアップ
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Poetryのインストール
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Poetryの設定
      run: |
        poetry config virtualenvs.in-project true
    
    - name: Poetry依存関係のキャッシュ
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: 依存関係のインストール
      run: |
        pip install uv
        uv pip install --system poetry
        poetry install --no-interaction
    
    - name: コードスタイルチェック
      run: |
        poetry run black --check app tests
        poetry run isort --check-only app tests
    
    - name: 型チェックの実行
      run: |
        poetry run mypy app tests
    
    - name: セキュリティチェック
      run: |
        poetry run pip install bandit safety
        poetry run bandit -r app -x tests
        poetry run safety check
        
  unit-tests:
    name: 単体テスト
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Pythonのセットアップ
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Poetryのインストール
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Poetryの設定
      run: |
        poetry config virtualenvs.in-project true
    
    - name: Poetry依存関係のキャッシュ
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: 依存関係のインストール
      run: |
        pip install uv
        uv pip install --system poetry
        poetry install --no-interaction
    
    - name: 単体テストの実行
      run: |
        poetry run pytest tests/unit/ --cov=app --cov-report=xml --cov-report=html --cov-report=term
    
    - name: カバレッジ閾値チェック
      run: |
        poetry run pip install coverage-threshold
        poetry run coverage-threshold --line-coverage-min=80
    
    - name: カバレッジレポートのアップロード
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  integration-tests:
    name: 結合テスト
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Pythonのセットアップ
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Poetryのインストール
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Poetryの設定
      run: |
        poetry config virtualenvs.in-project true
    
    - name: Poetry依存関係のキャッシュ
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: 依存関係のインストール
      run: |
        pip install uv
        uv pip install --system poetry
        poetry install --no-interaction
    
    - name: 結合テストの実行
      run: |
        poetry run pytest tests/integration/ --cov=app --cov-report=xml --cov-report=html --cov-report=term
    
    - name: カバレッジ閾値チェック
      run: |
        poetry run pip install coverage-threshold
        poetry run coverage-threshold --line-coverage-min=80
    
    - name: カバレッジレポートのアップロード
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
    
    - name: HTMLカバレッジレポートのアップロード
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-integration
        path: htmlcov/
        retention-days: 7
